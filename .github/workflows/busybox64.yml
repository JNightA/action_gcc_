name: Build BusyBox for Android

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create SDK directory
      run: |
        sudo mkdir -p /var/android-sdk
        sudo chown -R $USER:$USER /var/android-sdk

    - name: Cache Android SDK and NDK
      uses: actions/cache@v4
      id: cache-android
      with:
        path: /var/android-sdk
        key: ${{ runner.os }}-android-28.0.13004108-commandlinetools-linux-13114758_latest
        restore-keys: |
          ${{ runner.os }}-android-

    - name: Setup Android SDK
      if: steps.cache-android.outputs.cache-hit != 'true'
      run: |
        wget https://dl.google.com/android/repository/commandlinetools-linux-13114758_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d /var/android-sdk/cmdline-tools
        mv /var/android-sdk/cmdline-tools/cmdline-tools /var/android-sdk/cmdline-tools/latest

    - name: Set up environment
      run: |
        echo "ANDROID_HOME=/var/android-sdk" >> $GITHUB_ENV
        echo "NDK_HOME=/var/android-sdk/ndk/28.0.13004108" >> $GITHUB_ENV
        echo "/var/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH

    - name: Accept licenses
      if: steps.cache-android.outputs.cache-hit != 'true'
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses --sdk_root=$ANDROID_HOME

    - name: Install NDK
      if: steps.cache-android.outputs.cache-hit != 'true'
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;28.0.13004108" --sdk_root=$ANDROID_HOME

    - name: Verify NDK Installation
      run: |
        echo "NDK路径: $NDK_HOME"
        ls -l $NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android35-clang

    - name: Checkout BusyBox
      run: |
        git clone https://github.com/mirror/busybox.git
        cd busybox
        git checkout master

    - name: Configure BusyBox
      run: |
        cd busybox
        make defconfig
        
        # 修改编译器配置
        sed -i 's|CONFIG_CROSS_COMPILER_PREFIX=.*|CONFIG_CROSS_COMPILER_PREFIX="aarch64-linux-android-"|' .config
        sed -i 's|CONFIG_EXTRA_CFLAGS=.*|CONFIG_EXTRA_CFLAGS="-static -fPIE -pie --target=aarch64-linux-android35 --sysroot=$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot"|' .config
        sed -i 's|CONFIG_FEATURE_USE_INITTAB=y|# CONFIG_FEATURE_USE_INITTAB is not set|' .config

    - name: Build BusyBox
      run: |
        cd busybox
        $NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/clang \
          --target=aarch64-linux-android35 \
          --sysroot=$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot \
          -fuse-ld=lld \
          -static \
          -o busybox \
          -I include \
          $(find . -name '*.c')

    - name: Verify binary
      run: |
        file busybox/busybox
        readelf -h busybox/busybox | grep -q 'AArch64' || (echo "Wrong architecture"; exit 1)
        readelf -h busybox/busybox | grep -q 'UNIX - Android' || (echo "Not Android binary"; exit 1)

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: busybox-android-arm64
        path: busybox/busybox
