name: Android ARM64 Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Setup Android SDK
      run: |
        mkdir -p $HOME/android-sdk
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH

    - name: Accept licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

    - name: Install NDK
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;25.2.9519653" --sdk_root=$ANDROID_HOME
        echo "NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH

    - name: Build C files
      run: |
        # 遍历所有.c文件进行编译
        find . -name '*.c' -print0 | while IFS= read -r -d $'\0' c_file; do
          output_name=$(basename "$c_file" .c)
          aarch64-linux-android21-clang \
            --sysroot=$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot \
            -target aarch64-linux-android21 \
            -fPIE -pie \
            -o "$output_name" \
            "$c_file"
        done

    - name: Verify binary
      run: |
        # 检查文件类型和动态依赖
        file *
        readelf -d *.out || true

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: android-binaries
        path: |
          !*.c
          !*.sh
